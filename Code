<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="example.css">
    <title>PRSA GAME</title>
</head>
<body>
<script src="scripts.js"></script>

<!--game code-->
<section class="memory-game">
    <div class="memory-card" data-framework="braai-pack">
        <img class="front-face" src="image/braai-pack.jpg" alt="Braai-Pack" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
    <div class="memory-card" data-framework="braai-pack">
        <img class="front-face" src="image/braai-pack.jpg" alt="Braai-Pack" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
    <div class="memory-card" data-framework="castle-lite">
        <img class="front-face" src="image/castle-lite.jpg" alt="Castle-Lite" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
    <div class="memory-card" data-framework="castle-lite">
        <img class="front-face" src="image/castle-lite.jpg" alt="Castle-Lite" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
    <div class="memory-card" data-framework="castle-larger">
        <img class="front-face" src="image/castle-larger.jpg" alt="Castle-Larger" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
    <div class="memory-card" data-framework="castle-larger">
        <img class="front-face" src="image/castle-larger.jpg" alt="Castle-Larger" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
    <div class="memory-card" data-framework="spice-rice">
        <img class="front-face" src="image/spice-rice.jpg" alt="Spice-Rice" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
    <div class="memory-card" data-framework="spice-rice">
        <img class="front-face" src="image/spice-rice.jpg" alt="Spice-Rice" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
    <div class="memory-card" data-framework="wine-black">
        <img class="front-face" src="image/wine-black.png" alt="Wine-Black" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
    <div class="memory-card" data-framework="wine-black">
        <img class="front-face" src="image/wine-black.png" alt="Wine-Black" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
    <div class="memory-card" data-framework="train">
        <img class="front-face" src="image/train.jpg" alt="Train" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
    <div class="memory-card" data-framework="train">
        <img class="front-face" src="image/train.jpg" alt="Train" />
        <img class="back-face" src="image/prsa.jpg" alt="Rem-Black" />
    </div>
</section>

</body>
</html>

// CSS Code

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    height: 100vh;
    display: flex;
    background-color: black;
}

.memory-game {
    width: 640px;
    height: 640px;
    margin: auto;
    display: flex;
    flex-wrap: wrap;
    perspective: 1000px;
}

.memory-card {
    width: calc(25% - 10px);
    height: calc(33.333% - 10px);
    margin: 5px;
    position: relative;
    transform: scale(1);
    transform-style: preserve-3d;
    transition: transform .2s;
}

.memory-card:active {
    transform: scale(.97);
    transition: transform .2s;
}

.memory-card.flip {
    transform: rotateY(180deg);
}

.front-face,
.back-face {
    width: 102%;
    height: 100%;
    padding: 20px;
    position: absolute;
    border-radius: 5px;
    background: rgb(3, 77, 3);
    backface-visibility: hidden;
}

.front-face {
    transform: rotateY(180deg);
}

// JavaScript Code

const games = document.querySelectorAll('.memory-card');

let hasFlippedCard = false;
let lockBoard = false;
let firstCard, secondCard;

function flipCard() {
    if(lockBoard) return;
    if (this === firstCard) return;

    this.classList.add('flip');

    if (!hasFlippedCard) {
        // first click
        hasFlippedCard = true;
        firstCard = this;

        return;
    }

    // second click
    secondCard = this;

    checkForMatch();
}


function checkForMatch() {
  let isMatch = firstCard.dataset.framework ===
  secondCard.dataset.framework;

  isMatch ? disableCards() : unflipCards();
}

function disableCards () {
  firstCard.removeEventListener('click', flipCard);
  secondCard.removeEventListener('click', flipCard);

  resetBoard();
}

function unflipCards () {
    lockBoard = true;

  setTimeout(() => {
    firstCard.classList.remove('flip');
    secondCard.classList.remove('flip');

    resetBoard();
    }, 1500);
}

function resetBoard () {
    [hasFlippedCard, lockBoard] = [false, false];
    [firstCard, secondCard] = [null, null];
}

(function shuffle() {
    games.forEach (card => {
        let randomPos = Math.floor(Math.random() * 12);
        card.style.order = randomPos
    });
})();

games.forEach(card => card.addEventListener('click', flipCard));

